name: CI

on:
  push:
    branches:
      - main
    tags:
      - v0.**
  pull_request:
  workflow_dispatch:

jobs:
  cargo_test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo check
          cargo test --verbose

  linux:
    name: Build / linux
    runs-on: ubuntu-latest
    needs: cargo_test
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  windows:
    name: Build / windows
    runs-on: windows-latest
    needs: cargo_test
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  macos:
    name: Build / macos
    runs-on: macos-latest
    needs: cargo_test
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    # if: "startsWith(github.ref, 'refs/tags/')"
    # needs: [ cargo_test, macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_USERNAME: __token__
          MATURIN_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
